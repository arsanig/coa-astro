---
import NavLink from "./NavLink.astro";
import { localizePathname } from "@scripts/linking.ts";
import { languageTag } from "@paraglide/runtime";
import * as m from "@paraglide/messages.js";
const pathname = new URL(Astro.request.url).pathname;

const homeLocalized = localizePathname("/", languageTag());
const libLocalized = localizePathname("/library", languageTag());
const aaLocalized = localizePathname("/apostolic-answers", languageTag());
const ddLocalized = localizePathname("/deep-dive", languageTag());
const podLocalized = localizePathname("/podcasts", languageTag());
const shortsLocalized = localizePathname("/shorts", languageTag());
const faithLocalized = localizePathname("/faith", languageTag());
const contactLocalized = localizePathname("/contact", languageTag());
---

<nav class="relative w-full">
    <!-- Mobile menu button -->
    <button
        id="mobile-menu-button"
        class="md:hidden fixed top-4 right-4 z-50 p-2 rounded-md bg-pearl hover:bg-madder text-black hover:text-white transition-colors"
        aria-label="Toggle menu"
    >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
    </button>

    <!-- Mobile menu overlay -->
    <div id="mobile-menu" class="fixed inset-0 bg-black/50 z-40 hidden md:hidden"></div>

    <!-- Navigation links -->
    <div
        id="nav-links"
        class="fixed md:static inset-y-0 right-0 w-64 md:w-full bg-pearl md:bg-transparent transform translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out z-50 md:z-auto flex flex-col md:flex-row md:justify-center md:items-center"
    >
        <NavLink active={pathname === homeLocalized ? true : false} text={m.homeLabel()} route={homeLocalized} />
        <NavLink active={pathname.includes(libLocalized)} text={m.libraryLabel()} route={libLocalized} />
        <NavLink active={pathname.includes(aaLocalized)} text={m.answersLabel()} route={aaLocalized} />
        <NavLink active={pathname.includes(ddLocalized)} text={m.diveLabel()} route={ddLocalized} />
        <NavLink active={pathname === podLocalized ? true : false} text={m.podcastsLabel()} route={podLocalized} />
        <NavLink active={pathname === shortsLocalized ? true : false} text={m.shortsLabel()} route={shortsLocalized} />
        <NavLink active={pathname === faithLocalized ? true : false} text={m.faithLabel()} route={faithLocalized} />
        <NavLink
            active={pathname === contactLocalized ? true : false}
            text={m.contactLabel()}
            route={contactLocalized}
        />
    </div>
</nav>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const menuButton = document.getElementById("mobile-menu-button");
        const mobileMenu = document.getElementById("mobile-menu");
        const navLinks = document.getElementById("nav-links");
        const body = document.body;

        // Early return if any required elements are missing
        if (!menuButton || !mobileMenu || !navLinks || !body) {
            console.error("Required navigation elements not found");
            return;
        }

        let isMenuOpen = false;

        function toggleMenu() {
            isMenuOpen = !isMenuOpen;
            // Type assertion since we've already checked for null
            (mobileMenu as HTMLElement).classList.toggle("hidden");
            (navLinks as HTMLElement).classList.toggle("translate-x-full");
            body.classList.toggle("overflow-hidden");
        }

        menuButton.addEventListener("click", toggleMenu);
        mobileMenu.addEventListener("click", toggleMenu);

        // Close menu when clicking a link
        const links = navLinks.querySelectorAll("a");
        links.forEach((link) => {
            link.addEventListener("click", () => {
                if (isMenuOpen) {
                    toggleMenu();
                }
            });
        });
    });
</script>
